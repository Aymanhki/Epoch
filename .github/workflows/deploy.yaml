name: Deploy to Google Cloud VM

on:
  push:
    branches:
      - main

jobs:
  clean:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install SSH Client and sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client sshpass

      - name: SSH into Google Cloud VM for cleanup
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }} << EOF
            echo "Current directory path: $(pwd)"
            cd 
            rm -rf Epoch
            sudo fuser -k -n tcp 443
            sudo fuser -k -n tcp 8080
            sudo fuser -k -n tcp 80
            sudo fuser -k -n tcp 8000
            docker stop \$(docker ps -q)
            docker rm \$(docker ps -aq)
            docker rmi \$(docker images -q)
            git clone https://github.com/Aymanhki/Epoch.git 
            cd
            cd Epoch/epoch_backend/assets/
            cp /etc/letsencrypt/live/aymanhkias.com/fullchain.pem ./
            cp /etc/letsencrypt/live/aymanhkias.com/privkey.pem ./
            cd
            cd Epoch/epoch_frontend/
            cp /etc/letsencrypt/live/aymanhkias.com/fullchain.pem ./
            cp /etc/letsencrypt/live/aymanhkias.com/privkey.pem ./
            cd
            exit
          EOF

  test:
    needs: clean
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install SSH Client and sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client sshpass
          sudo apt-get install -y python3-pip

      - name: SSH into Google Cloud VM for testing
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }} << EOF
            echo "Current directory path: $(pwd)"
            cd
            cd Epoch/epoch_backend/
            nohup python3 main.py > main.log 2>&1 &
            pip install -r requirements.txt
            pip install pytest
            python3 -m pytest -rA -vv --color=yes tests/webserver_tests.py
            EXIT_STATUS=$?
            pkill -f "python3 main.py"
            exit $EXIT_STATUS
          EOF

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install SSH Client and sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client sshpass

      - name: Deploying Backend (Build and Run Backend Docker Container)
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }} << EOF
            echo "Current directory path: $(pwd)"
            cd
            cd Epoch/epoch_backend/
            docker build -t epoch_backend ./
            docker run -d -p 8080:8080 epoch_backend
            exit
          EOF
        if: success()

      - name: Deploying Frontend (Build and Run Frontend Docker Container)
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }} << EOF
            echo "Current directory path: $(pwd)"
            cd
            cd Epoch/epoch_frontend/
            docker build -t epoch_frontend ./
            docker run -d -p 80:80 -p 443:443 epoch_frontend
            exit
          EOF
        if: success()
